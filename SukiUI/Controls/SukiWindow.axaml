<ResourceDictionary
    xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:icons="clr-namespace:SukiUI.Content" xmlns:suki="clr-namespace:SukiUI.Controls">
    <ControlTheme x:Key="SukiWindowTheme" TargetType="suki:SukiWindow">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="TransparencyLevelHint" Value="Transparent"/>
        <Setter Property="SystemDecorations" Value="{OnPlatform Full, Linux=None, x:TypeArguments=SystemDecorations}"/>
        <Setter Property="ExtendClientAreaChromeHints" Value="NoChrome"/>
        <Setter Property="ExtendClientAreaTitleBarHeightHint" Value="-1"/>
        <Setter Property="ExtendClientAreaToDecorationsHint" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SukiText}"/>
        <Setter Property="FlowDirection" Value="{DynamicResource FlowDirectionPrimary}"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    Margin="{TemplateBinding Margin}"
                    ClipToBounds="True"
                    CornerRadius="{OnPlatform '0', Linux='10', x:TypeArguments=CornerRadius}">
                    <VisualLayerManager Name="PART_VisualLayerManager" IsHitTestVisible="True">
                        <VisualLayerManager.ChromeOverlayLayer>
                            <Panel>
                                <ItemsControl ItemsSource="{Binding Hosts, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Panel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <LayoutTransformControl
                                    x:Name="PART_LayoutTransform" VerticalAlignment="Top"
                                    ContextMenu="{Binding TitleBarContextMenu, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"
                                    RenderTransformOrigin="0%,0%">
                                    <Panel>
                                        <suki:GlassCard
                                            Name="PART_TitleBarBackground" BorderThickness="0"
                                            CornerRadius="0"/>
                                        <DockPanel LastChildFill="True">
                                            <StackPanel
                                                DockPanel.Dock="Right" VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                                <StackPanel.Styles>
                                                    <Style Selector="PathIcon">
                                                        <Setter Property="Height" Value="10"/>
                                                        <Setter Property="Width" Value="10"/>
                                                    </Style>
                                                </StackPanel.Styles>
                                                <ItemsControl ItemsSource="{Binding RightWindowTitleBarControls, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel FlowDirection="{DynamicResource FlowDirectionOpposite}" Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                                <Button
                                                    Name="PART_MinimizeButton" Classes="Basic WindowControlsButton"
                                                    IsVisible="{Binding CanMinimize, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}">
                                                    <PathIcon VerticalAlignment="Center" Data="{x:Static icons:Icons.WindowMinimize}"/>
                                                </Button>
                                                <Button
                                                    Name="PART_MaximizeButton" Classes="Basic WindowControlsButton"
                                                    IsVisible="{Binding CanMaximize, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}">
                                                    <PathIcon x:Name="MaximizeIcon" Data="{x:Static icons:Icons.WindowMaximize}"/>
                                                </Button>
                                                <Button Name="PART_CloseButton" Classes="Basic WindowControlsButton Close">
                                                    <PathIcon Data="{x:Static icons:Icons.WindowClose}"/>
                                                </Button>
                                            </StackPanel>
                                            <StackPanel
                                                VerticalAlignment="Center" IsHitTestVisible="False"
                                                Orientation="Horizontal" Spacing="10">
                                                <ContentPresenter
                                                    HorizontalAlignment="Left"
                                                    Content="{Binding LogoContent, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"
                                                    IsHitTestVisible="False"/>
                                                <TextBlock
                                                    VerticalAlignment="Center"
                                                    FontSize="{Binding TitleFontSize, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"
                                                    FontWeight="{Binding TitleFontWeight, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"
                                                    IsHitTestVisible="False"
                                                    Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"/>
                                                <ContentPresenter Content="{Binding TitleBarContent, RelativeSource={RelativeSource AncestorType={x:Type suki:SukiWindow}}}"/>
                                            </StackPanel>
                                        </DockPanel>
                                    </Panel>
                                </LayoutTransformControl>
                            </Panel>
                        </VisualLayerManager.ChromeOverlayLayer>
                        <Panel x:Name="PART_Root">
                            <suki:SukiBackground Name="PART_Background"/>

                            <Panel
                                Background="White" IsHitTestVisible="False"
                                IsVisible="{DynamicResource IsLight}"
                                Opacity="0.1"/>

                            <DockPanel LastChildFill="True">
                                <Control DockPanel.Dock="Top" Height="{Binding Bounds.Height, ElementName=PART_LayoutTransform}"/>
                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </DockPanel>
                        </Panel>
                    </VisualLayerManager>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[WindowState=Maximized] /template/ PathIcon#MaximizeIcon">
            <Setter Property="Data" Value="{x:Static icons:Icons.WindowRestore}"/>
        </Style>
        <Style Selector="^[WindowState=Normal] /template/ PathIcon#MaximizeIcon">
            <Setter Property="Data" Value="{x:Static icons:Icons.WindowMaximize}"/>
        </Style>
        <Style Selector="^[IsTitleBarVisible=True]">
            <Style Selector="^[TitleBarAnimationEnabled=True]">
                <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
                    <Style.Animations>
                        <Animation
                            Easing="{StaticResource MenuEasing}"
                            FillMode="Forward"
                            Duration="{StaticResource MediumAnimationDuration}">
                            <KeyFrame Cue="0%">
                                <Setter Property="ScaleTransform.ScaleY" Value="0"/>
                                <Setter Property="IsVisible" Value="True"/>
                            </KeyFrame>
                            <KeyFrame Cue="100%">
                                <Setter Property="ScaleTransform.ScaleY" Value="1"/>
                            </KeyFrame>
                        </Animation>
                    </Style.Animations>
                </Style>
            </Style>
            <Style Selector="^[TitleBarAnimationEnabled=False]">
                <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
                    <Setter Property="IsVisible" Value="True"/>
                </Style>
            </Style>
        </Style>
        <Style Selector="^[IsTitleBarVisible=False]">
            <Style Selector="^[TitleBarAnimationEnabled=True]">
                <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
                    <Style.Animations>
                        <Animation
                            Easing="{StaticResource MenuEasing}"
                            FillMode="Forward"
                            Duration="{StaticResource MediumAnimationDuration}">
                            <KeyFrame Cue="0%">
                                <Setter Property="ScaleTransform.ScaleY" Value="1"/>
                            </KeyFrame>
                            <KeyFrame Cue="100%">
                                <Setter Property="ScaleTransform.ScaleY" Value="0"/>
                                <Setter Property="IsVisible" Value="False"/>
                            </KeyFrame>
                        </Animation>
                    </Style.Animations>
                </Style>
            </Style>
            <Style Selector="^[TitleBarAnimationEnabled=False]">
                <Style Selector="^ /template/ LayoutTransformControl#PART_LayoutTransform">
                    <Setter Property="IsVisible" Value="False"/>
                </Style>
            </Style>
        </Style>
    </ControlTheme>
    <ControlTheme
        x:Key="{x:Type suki:SukiWindow}"
        BasedOn="{StaticResource SukiWindowTheme}"
        TargetType="suki:SukiWindow"/>
</ResourceDictionary>